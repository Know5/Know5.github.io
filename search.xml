<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Upload-labs靶场(01-06)</title>
      <link href="/2023/04/01/Upload-labs%E9%9D%B6%E5%9C%BA-01-06/"/>
      <url>/2023/04/01/Upload-labs%E9%9D%B6%E5%9C%BA-01-06/</url>
      
        <content type="html"><![CDATA[<p>本博客只是自己当时做题的想法，并未涉及太深，要更深层次了解，还是需要去看看其他大佬的做题思路。</p><h1 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h1><p>首先会发现，如果直接上传php，会提示不让直接上传该图片<br><img src="https://i.328888.xyz/2023/04/02/iHzngC.png"><br>但是上传图片可以上传，所以放入BP中看看<br><img src="https://img-blog.csdnimg.cn/75c82ad687ff4f31a02830365f29cab6.png"><br>将1.png修改为1.php再发送，<br><img src="https://img-blog.csdnimg.cn/ac06f6fab79c41ed9f0f56d662b75015.png"><br>再通过靶场查询这个php，上传成功<br><img src="https://img-blog.csdnimg.cn/dfbcdf627e41420499d8de55e8940e03.png"></p><h1 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h1><h1 id="1、修改上传类型"><a href="#1、修改上传类型" class="headerlink" title="1、修改上传类型"></a>1、修改上传类型</h1><p>首先根据源代码可以看到，这是需要确认文件类型<br><img src="https://img-blog.csdnimg.cn/9d0a44a73ba141758cb6349cb256ecd2.png"><br>所以可以通过用BP去抓个php文件的包，然后将如下图标注的地方进行修改，可以将Content-Type修改为允许上传的类型image&#x2F;jpeg或image&#x2F;png或image&#x2F;gif。<br><img src="https://img-blog.csdnimg.cn/9a2973dfb3e24a219da0fb8e939aef80.png"><br>修改后发送发现上传成功。<br><img src="https://img-blog.csdnimg.cn/f952d36834dd4c24b2940928cf9b7055.png"><br>访问验证一下<br><img src="https://img-blog.csdnimg.cn/e754058ded354d869f0b67ceaf2c14ee.png"></p><h1 id="2、如Pass-1的做法"><a href="#2、如Pass-1的做法" class="headerlink" title="2、如Pass 1的做法"></a>2、如Pass 1的做法</h1><p>先上传图片，然后文件类型就已经变成图片的类型，然后再将图片后缀修改为php，发送。<br><img src="https://img-blog.csdnimg.cn/a0016ad1555647b8b5f04d89a7869264.png"><br><img src="https://img-blog.csdnimg.cn/21c302db6b424a1b8884cd4aa1ea8231.png"></p><h1 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h1><p>首先查看这道题的源代码，发现是黑名单验证<br><img src="https://img-blog.csdnimg.cn/b2dcc525ac4d44e38cde0b9a46c3d20f.png"><br>且不允许上传.php后缀文件，我这里是将php后缀修改成php5后上传。发现成功上传<br><img src="https://img-blog.csdnimg.cn/fc64a0b198804ba2a7804b5b06c36bac.png"><br>访问一下<br><img src="https://img-blog.csdnimg.cn/594b0a604dc54478a0528dba7fa81c16.png"><br>详情可以看这位大佬的黑名单绕过，里面不局限于php5后缀，还是有很多修改可以上传。<br><a href="https://blog.csdn.net/qq_25899635/article/details/90344198">大佬博客</a></p><h1 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h1><p>先查看源代码<br><img src="https://img-blog.csdnimg.cn/0c65e91f87ca4fdbb5705a1897427fd3.png"><br>发现很多后缀被禁止上传。所以需要用到.htaccess配置文件，并且在其<br>文件内部写上<br>    &lt;FileMatch”4.png”&gt;<br>    SetHandler application&#x2F;x-httpd-php<br>可以将其中4.png解析为php，在其中写入php代码就行，<br>然后通过BP抓图片包，将其在重发器中发送一下，发现上传成功，访问4.png就行了<br><img src="https://img-blog.csdnimg.cn/4458c5ee116f4ed7ae7824ded98a7340.png"><br>访问一下，因为我这个浏览器访问会黑屏，所以看源代码<br><img src="https://img-blog.csdnimg.cn/3dc62c7563554d3eb104d216f75fdfdd.png"></p><h1 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h1><p>从源代码来看和上题一样导致很多文件无法上传，且上题使用的.htaccess文件也被限制了<br><img src="https://img-blog.csdnimg.cn/2c6f87f594674868b9370baf01eb0274.png"><br>但其中php7文件后缀还可以使用绕过，利用BP抓包并将后缀改为php7，发现上传成功。<br><img src="https://img-blog.csdnimg.cn/12a7e77854574f8782c1bc065b68ac3d.png"><br>访问一下<br><img src="https://img-blog.csdnimg.cn/84e0be3c06c5478ba49570e01678c4f8.png"></p><h1 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h1><p>这道题可以通过php大小写绕过，先用BP抓住一个php后缀文件的包，然后在重发器将其后缀修改为PHP，发现上传成功<br><img src="https://img-blog.csdnimg.cn/b85a25a0cc504adaadbc59014f231a60.png"><br>访问一下验证。（不知道为什么打到6的适时候浏览网站就无法看到，显示内部浏览器错误，所以这是找的一个大佬的做的结果），其最后结果就是访问后类似这个就说明上传成功了<br><img src="https://img-blog.csdnimg.cn/8760eec517b14a6987aa1b1b9f862b58.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>做这个时候发现很多自己不会的知识，也从中学习到了很多，希望能慢慢学习，不断进步。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web、靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决pythoncharm中关于Crypto的相关问题</title>
      <link href="/2023/02/08/%E8%A7%A3%E5%86%B3pythoncharm%E4%B8%AD%E5%85%B3%E4%BA%8ECrypto%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
      <url>/2023/02/08/%E8%A7%A3%E5%86%B3pythoncharm%E4%B8%AD%E5%85%B3%E4%BA%8ECrypto%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p> 在学习一道rsa题wp中，发现其代码无法在我的PythonCharm中运行并发出报错，报错内容如下：</p><blockquote><p>from Crypto.Util.number import *<br>ImportError: No module named Crypto.Util.number </p></blockquote><p>上网搜索原因是我的pythoncharm中并没有crypto的下载，需要通过pip对其进行下载。于此同时，发现我的pip也无法使用（晕），当我使用pip时给我发出如下的报错：</p><blockquote></blockquote><p>pip : 无法将“pip”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确， 然后再试一次。 所在位置 行:1 字符: 1 + pip ins</p><p>于是我又上网查询一下解决出现这种问题的方法。解决方式如下：<br>一般来说，让我们下载PythonCharm时，pip也已经下载好了，可以通过打开PythonCharm左上角的 文件&#x2F;设置&#x2F;项目&#x2F;Python解释器 找到它。如图：<br><img src="https://img-blog.csdnimg.cn/d9c8d22214234eccad3df9c76d864883.png"><br>但是如果直接在PythonCharm的终端里面打出:<br>     <code>pip install crypto</code></p><p>就会出现上面我所说的报错， 就是虽然下载了pip，但并未在PythonCharm中配置pip环境，所以无法使用，所以我们需要对pip进行环境配置，第一步是直接在PythonCharm内部进行pip的环境配置，有的人在第一步后就可以使用pip了，但是有的还是会出现pip的报错(比如我)，所以我们还需要对系统进行环境配置，下面是第一步的步骤：</p><p>首先还是打开PythonCharm，找到左上角的  文件&#x2F;设置&#x2F;项目  找到如图所在的位置，并点击红圈标记的地方<br><img src="https://img-blog.csdnimg.cn/fabba330e6ce41e484970a43ba2e1848.png"><br>然后进入环境变量界面，点击 “ + ” <br><img src="https://img-blog.csdnimg.cn/6dab5115bf9a407787a0cbeddb119d12.png"><br>名称：Path  值：复制下图中的位置部分<br><img src="https://img-blog.csdnimg.cn/f68a1a3d4a4b443b968798305a772041.png"><br>应用后重启PythonCharm，然后打开PythonCharm中的终端输入pip，看是否出现如下图的情况<br><img src="https://img-blog.csdnimg.cn/a643c301522f47b2a87cca104a504262.png"><br>如果出现，则说明pip配置成功，如果没有出现该图情况，则进行第二步，对系统环境进行配置，找到电脑中的高级系统设置，点击红圈标注的位置<br><img src="https://img-blog.csdnimg.cn/7ebafd2181054992b385c88439991cb3.png"><br>找到系统变量（就是点进去后下面那一处）然后找到其中为Path的变量，双击后点击新建，将刚才复制的地址粘贴上去，然后再次打开PythonCharm就可以使用pip的功能了。</p><p>接下来是关于Crypto的问题，当我输入<br><code>pip install crypto</code>并运行后<br>出现下面的情况</p><blockquote><p>from Crypto.Util.number import *<br>ModuleNotFoundError: No module named ‘Crypto’</p></blockquote><p>上网搜寻原因是因为crypto这个库过时了，现在都是下载pycryptodome<br>下载它的代码是<br><code>pip install crypto pycryptodome</code><br>​<br>详情可以参考这位大佬的CSDN博客<br><a href="https://blog.csdn.net/Ahuuua/article/details/108800712">​https://blog.csdn.net/Ahuuua/article/details/108800712<br>​</a></p><p>总结</p><p>以上便是我解决这些问题中所做的行为，虽然解决了我的问题，但是不能保证解决大家的问题，仅供参考，很多大佬写的远比我这详细，也希望能给大家带来一些帮助。</p><p>​<br>​​</p>]]></content>
      
      
      
        <tags>
            
            <tag> 见解，参考，学习。 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SLsec招新赛</title>
      <link href="/2023/01/09/SLsec%E6%8B%9B%E6%96%B0%E8%B5%9B/"/>
      <url>/2023/01/09/SLsec%E6%8B%9B%E6%96%B0%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h2 id="一、熊曰"><a href="#一、熊曰" class="headerlink" title="一、熊曰"></a>一、熊曰</h2><p>从题目看到是一串不知道什么的什么，但根据题目名字，考虑到与熊论道<br><img src="https://img-blog.csdnimg.cn/4b79f91f6ff44b8988c4667d4b0b6e22.png"><br>所以通过网上搜寻与熊论道，得到答案<img src="https://img-blog.csdnimg.cn/13706135499a468bb58c0574f568ef7d.png"><br> 链接：<a href="http://hi.pcmoe.net/">熊曰解密</a></p><h2 id="二、这个皮卡丘有点矮"><a href="#二、这个皮卡丘有点矮" class="headerlink" title="二、这个皮卡丘有点矮"></a>二、这个皮卡丘有点矮</h2><p>打开题目得到一个附件是一张皮卡丘图片<img src="https://img-blog.csdnimg.cn/a6c9f2449e404d639d3bc430820fd8b9.png">通过图片，考虑到可能是考察图片长短，所以可以通过010改变图片长短来找到答案<img src="https://img-blog.csdnimg.cn/b7c7507c51d34a79a160c9784263d22c.png"><br>最终得到flag，就在皮卡丘的脚下<img src="https://img-blog.csdnimg.cn/7c90d9e81ed44880b9905be47a498dde.png"></p><h2 id="三、vivo50"><a href="#三、vivo50" class="headerlink" title="三、vivo50"></a>三、vivo50</h2><p>本题所给附件是一个pdf文件，打开后发现是一张图片，没有线索，不过可以通过pdf文件中的，如下图找到flag<img src="https://img-blog.csdnimg.cn/74d3eaabecfe4026be60a7048390639a.png"></p><h2 id="四、你是lsp吗"><a href="#四、你是lsp吗" class="headerlink" title="四、你是lsp吗"></a>四、你是lsp吗</h2><p>本题附件是一张图片，通过010查询没有什么问题，通过stegsolve中的data extract发现里面还有一张图片，得到一张二维码<img src="https://img-blog.csdnimg.cn/74fbb1b89d6043fd832f29438000227f.png"><br>通过扫描二维码得到一串base字符<img src="https://img-blog.csdnimg.cn/c022e15c1a934dbda6915968005c4e46.png"><br>通过base32解密得到flag<img src="https://img-blog.csdnimg.cn/95f693bd07034c76a5ec3881608440cf.png"><br>base32解密链接：<a href="https://ctf.bugku.com/tool/base32">base32</a></p><h2 id="五、起风了"><a href="#五、起风了" class="headerlink" title="五、起风了"></a>五、起风了</h2><p>本题附件图片是一串看不懂的字符，拖到010试试<img src="https://img-blog.csdnimg.cn/7740a3c0c57b4022a5a92b3d56dede23.png"><br><img src="https://img-blog.csdnimg.cn/73251229b95c493e925d642f2e4ec128.png"><br>得到一串代码，看着像base解密，通过base解密得到一句英语<img src="https://img-blog.csdnimg.cn/a81ea7619c214581b692e34ae5354921.png"><br>网上英语翻译知道其意思<img src="https://img-blog.csdnimg.cn/e289a4d299784863ae7e1004ca1ad9b0.png">上网搜索提瓦特解密得到以下内容<img src="https://img-blog.csdnimg.cn/89067846ebdf45e48388eba0e35e9146.png"><br>得到flag：SLsec{yuanlainishiop}</p><h2 id="六、你会相信PDD吗？"><a href="#六、你会相信PDD吗？" class="headerlink" title="六、你会相信PDD吗？"></a>六、你会相信PDD吗？</h2><p>打开压缩包发现图片被加密了，<img src="https://img-blog.csdnimg.cn/2590e29242ff4b8fbd6ef152b9d6adf6.png"><br>考虑到没有任何密码提示，有可能是压缩包伪加密，通过010修改得到图片<img src="https://img-blog.csdnimg.cn/e40f84d04e6e499cb4a203651ccbb7cd.png"><br>发现是一张二维码但缺失一个定位角，下面有俩种方法。第一种方法、通过ps技术找到一个二维码定位角角补齐二维码通过扫描得到答案。第二种方法、通过CQR得到二维码藏的东西<img src="https://img-blog.csdnimg.cn/3bf780496935475982184df2bf4c520d.png"><br>通过内容考虑栅栏密码，得到flag<img src="https://img-blog.csdnimg.cn/abad0cd0fd40457ab72fde28014e82c9.png"></p><h2 id="七、情报员CPU"><a href="#七、情报员CPU" class="headerlink" title="七、情报员CPU"></a>七、情报员CPU</h2><p>打开附件发现是一个加密压缩包，<br><img src="https://img-blog.csdnimg.cn/7620f7e93d764197a28bce0cb6fdbaed.png"><br>打开passwd1<img src="https://img-blog.csdnimg.cn/f90232b1be104e6fb72c5d50d04effdb.png"><br>可以考虑干支解密，通过<img src="https://img-blog.csdnimg.cn/a8d27d31d7ab4c238ff5c62814fd67b2.png"><br>对照得到密码，打开第二个压缩包也是加密的，打开passwd2<img src="https://img-blog.csdnimg.cn/05141dba3e4a4ac6a1e47636f1a91398.png"><br>看出是核心价值观编码<img src="https://img-blog.csdnimg.cn/46cfa36a2f8c48be8e7783275fa728d3.png"><br>打开第二个压缩包得到一张图片<img src="https://img-blog.csdnimg.cn/86a2fc78f76648c285f7cdd4b2d5ba4d.png"><br>得到CPU带来的秘密图片通过010看到藏着一串数字，考虑ascii码加密<img src="https://img-blog.csdnimg.cn/6b4b1ff19e1043fea54a5ed34bbc621f.png"><br><img src="https://img-blog.csdnimg.cn/b64a23eb871946149cbb31def92b9b27.png">得到flag，结果用SLsec{}包装<br>链接:<a href="https://ctf.bugku.com/tool/cvecode">核心价值观编码</a></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="一、签到"><a href="#一、签到" class="headerlink" title="一、签到"></a>一、签到</h2><p>通过网页捕获找到这个flag<img src="https://img-blog.csdnimg.cn/b1e4a6c8d0424f40807b74a71f89a266.png"><br>再通过保存图片，通过网上图片文字提取得到flag<img src="https://img-blog.csdnimg.cn/0fe19985425e49798251eab79149a2c3.png"></p><h2 id="二、Robots"><a href="#二、Robots" class="headerlink" title="二、Robots"></a>二、Robots</h2><p>通过robots网上可得知爬虫协议，即将网站后面加上&#x2F;robots，如图<img src="https://img-blog.csdnimg.cn/16f1280b0b40422a9fd0cdd2507c435e.png"><br>再通过此修改得到flag<img src="https://img-blog.csdnimg.cn/f4c100f43bb2457992e6cbf8815ea18b.png"></p><h2 id="三、PHP01"><a href="#三、PHP01" class="headerlink" title="三、PHP01"></a>三、PHP01</h2><p><img src="https://img-blog.csdnimg.cn/4ceea2c0a9ed4f8d9d52095a29a60ab5.png"><br>根据对此分析得到get应传的参，如图所示，得到flag。<img src="https://img-blog.csdnimg.cn/79a3291dbf1849fb8b4bb6d7de6926f8.png"></p><h2 id="四、PHP02"><a href="#四、PHP02" class="headerlink" title="四、PHP02"></a>四、PHP02</h2><p><img src="https://img-blog.csdnimg.cn/927457eba5cc46d2b96baa8528d5612b.png">首先这题提示只要访问flag.php就能得到答案，但是如果你单纯输出flag.php会出现如下图的情况<img src="https://img-blog.csdnimg.cn/0851eb9a7f3f4babb6ef9423f4b47e30.png">所以可以从中得到规律，进行以下的修改，得到flag<img src="https://img-blog.csdnimg.cn/4e71b5701a8044f69fcaa60b7df2da46.png"></p><h2 id="CPYPTO"><a href="#CPYPTO" class="headerlink" title="CPYPTO"></a>CPYPTO</h2><h2 id="一、base家族"><a href="#一、base家族" class="headerlink" title="一、base家族"></a>一、base家族</h2><p>打开附件得到一串码，根据题目，考虑base解密<img src="https://img-blog.csdnimg.cn/e49eb8026b2640f4955fecfc755b5acf.png"><br>考虑到可能是base的层层加密<img src="https://img-blog.csdnimg.cn/24b30ad9dea546509415dad3cddc7985.png"><br><img src="https://img-blog.csdnimg.cn/0a305a34f54a42b181a07952f2b6c9f4.png"><br><img src="https://img-blog.csdnimg.cn/2ba6b68d5a29445daa02a78cbdcfdf67.png"><br>工具链接:<a href="https://ctf.bugku.com/tools">https://ctf.bugku.com/tools</a></p><h2 id="二、O欢迎来到SLsec！，ok"><a href="#二、O欢迎来到SLsec！，ok" class="headerlink" title="二、O欢迎来到SLsec！，ok"></a>二、O欢迎来到SLsec！，ok</h2><p>打开文本得到一堆重复乱码，<img src="https://img-blog.csdnimg.cn/9f439923407b48faa14c529473c7366e.png"><br>根据题目考虑到ook解密，将SLsec改成Ook后得到flag<img src="https://img-blog.csdnimg.cn/c0794036be604434ab58c6b9bd749c24.png"><br>ook解密链接:<a href="https://ctf.bugku.com/tool/brainfuck">https://ctf.bugku.com/tool/brainfuck</a></p><h2 id="三、小兔兔找朋友"><a href="#三、小兔兔找朋友" class="headerlink" title="三、小兔兔找朋友"></a>三、小兔兔找朋友</h2><p><img src="https://img-blog.csdnimg.cn/dacb3b73d9dd4f01a26587f360391d34.png"><br>此题要根据题目来做，首先是小兔子过生日，当天为光棍节，所以密钥为1111，通过兔兔想到兔子解密，兔子解密后栅栏数为三的栅栏解密以及最后的凯撒解密得到答案，步骤如下<img src="https://img-blog.csdnimg.cn/d01a30fd80c74387b9115d682cb03f92.png"><br><img src="https://img-blog.csdnimg.cn/89da6bec84b649d5bb42aba95eb3ff40.png"><br><img src="https://img-blog.csdnimg.cn/3a6a691046f6475f836062ff698f5da3.png"><br>RABBIT解密链接:<a href="https://www.codeeeee.com/encrypt/rabbit.html">https://www.codeeeee.com/encrypt/rabbit.html</a></p><h2 id="四、MD5解密"><a href="#四、MD5解密" class="headerlink" title="四、MD5解密"></a>四、MD5解密</h2><p>该题是通过一串代码得到的答案，<img src="https://img-blog.csdnimg.cn/14b994b450f544d2bab69ae1b08eb176.png"><br>再用SLsec包装即是答案。</p><p>源代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">#print hashlib.md5(s).hexdigest().upper()`</span><br><span class="line">k = &#x27;SLsec&#123;md5&amp;zd&amp;mj&amp;m&#125;&#x27;</span><br><span class="line">for i in range(26):</span><br><span class="line">    temp1 = k.replace(&#x27;&amp;&#x27;,str(chr(97+i)),1) #用ascii开始，从A开始查</span><br><span class="line">    for j in range(26):</span><br><span class="line">        temp2 = temp1.replace(&#x27;&amp;&#x27;,chr(97+j),1)</span><br><span class="line">        for n in range(26):``</span><br><span class="line">            temp3 = temp2.replace(&#x27;&amp;&#x27;,chr(97+n),1)</span><br><span class="line">            s = hashlib.md5(temp3.encode(&#x27;utf8&#x27;)).hexdigest().upper()#注意大小写</span><br><span class="line">            if s[:32] == &#x27;D1ABA2C785779AFFFBEC56422DBF23F2&#x27;:#检查元素</span><br><span class="line">                print(temp3)</span><br></pre></td></tr></table></figure><p>源代码链接：<a href="https://blog.csdn.net/emmmk_suibian/article/details/123693217">https://blog.csdn.net/emmmk_suibian&#x2F;article&#x2F;details&#x2F;123693217</a></p><h2 id="RESERVE"><a href="#RESERVE" class="headerlink" title="RESERVE"></a>RESERVE</h2><h2 id="一、re签到"><a href="#一、re签到" class="headerlink" title="一、re签到"></a>一、re签到</h2><p>将附件放入ida就能找到答案<img src="https://img-blog.csdnimg.cn/18adbcc956c24c53b4dc37a521d1f56b.png"></p><h2 id="二、JustCaesar"><a href="#二、JustCaesar" class="headerlink" title="二、JustCaesar"></a>二、JustCaesar</h2><p>第二题同样是exe文件，所以通过ida打开这个压缩包<img src="https://img-blog.csdnimg.cn/c72ca5bc13bf4c059b3b6768bee13c84.png"><br>得到一串代码，通过题目提示凯撒，所以进行凯撒解密得到flag<img src="https://img-blog.csdnimg.cn/173550f16aa543ebb433c8b1a8421e18.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 新手、网安学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/07/hello-world/"/>
      <url>/2023/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
