<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SLsec招新赛</title>
      <link href="/2023/01/09/SLsec%E6%8B%9B%E6%96%B0%E8%B5%9B/"/>
      <url>/2023/01/09/SLsec%E6%8B%9B%E6%96%B0%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h2 id="一、熊曰"><a href="#一、熊曰" class="headerlink" title="一、熊曰"></a>一、熊曰</h2><p>从题目看到是一串不知道什么的什么，但根据题目名字，考虑到与熊论道<br><img src="https://img-blog.csdnimg.cn/4b79f91f6ff44b8988c4667d4b0b6e22.png"><br>所以通过网上搜寻与熊论道，得到答案<img src="https://img-blog.csdnimg.cn/13706135499a468bb58c0574f568ef7d.png"><br> 链接：<a href="http://hi.pcmoe.net/">熊曰解密</a></p><h2 id="二、这个皮卡丘有点矮"><a href="#二、这个皮卡丘有点矮" class="headerlink" title="二、这个皮卡丘有点矮"></a>二、这个皮卡丘有点矮</h2><p>打开题目得到一个附件是一张皮卡丘图片<img src="https://img-blog.csdnimg.cn/a6c9f2449e404d639d3bc430820fd8b9.png">通过图片，考虑到可能是考察图片长短，所以可以通过010改变图片长短来找到答案<img src="https://img-blog.csdnimg.cn/b7c7507c51d34a79a160c9784263d22c.png"><br>最终得到flag，就在皮卡丘的脚下<img src="https://img-blog.csdnimg.cn/7c90d9e81ed44880b9905be47a498dde.png"></p><h2 id="三、vivo50"><a href="#三、vivo50" class="headerlink" title="三、vivo50"></a>三、vivo50</h2><p>本题所给附件是一个pdf文件，打开后发现是一张图片，没有线索，不过可以通过pdf文件中的，如下图找到flag<img src="https://img-blog.csdnimg.cn/74d3eaabecfe4026be60a7048390639a.png"></p><h2 id="四、你是lsp吗"><a href="#四、你是lsp吗" class="headerlink" title="四、你是lsp吗"></a>四、你是lsp吗</h2><p>本题附件是一张图片，通过010查询没有什么问题，通过stegsolve中的data extract发现里面还有一张图片，得到一张二维码<img src="https://img-blog.csdnimg.cn/74fbb1b89d6043fd832f29438000227f.png"><br>通过扫描二维码得到一串base字符<img src="https://img-blog.csdnimg.cn/c022e15c1a934dbda6915968005c4e46.png"><br>通过base32解密得到flag<img src="https://img-blog.csdnimg.cn/95f693bd07034c76a5ec3881608440cf.png"><br>base32解密链接：<a href="https://ctf.bugku.com/tool/base32">base32</a></p><h2 id="五、起风了"><a href="#五、起风了" class="headerlink" title="五、起风了"></a>五、起风了</h2><p>本题附件图片是一串看不懂的字符，拖到010试试<img src="https://img-blog.csdnimg.cn/7740a3c0c57b4022a5a92b3d56dede23.png"><br><img src="https://img-blog.csdnimg.cn/73251229b95c493e925d642f2e4ec128.png"><br>得到一串代码，看着像base解密，通过base解密得到一句英语<img src="https://img-blog.csdnimg.cn/a81ea7619c214581b692e34ae5354921.png"><br>网上英语翻译知道其意思<img src="https://img-blog.csdnimg.cn/e289a4d299784863ae7e1004ca1ad9b0.png">上网搜索提瓦特解密得到以下内容<img src="https://img-blog.csdnimg.cn/89067846ebdf45e48388eba0e35e9146.png"><br>得到flag：SLsec{yuanlainishiop}</p><h2 id="六、你会相信PDD吗？"><a href="#六、你会相信PDD吗？" class="headerlink" title="六、你会相信PDD吗？"></a>六、你会相信PDD吗？</h2><p>打开压缩包发现图片被加密了，<img src="https://img-blog.csdnimg.cn/2590e29242ff4b8fbd6ef152b9d6adf6.png"><br>考虑到没有任何密码提示，有可能是压缩包伪加密，通过010修改得到图片<img src="https://img-blog.csdnimg.cn/e40f84d04e6e499cb4a203651ccbb7cd.png"><br>发现是一张二维码但缺失一个定位角，下面有俩种方法。第一种方法、通过ps技术找到一个二维码定位角角补齐二维码通过扫描得到答案。第二种方法、通过CQR得到二维码藏的东西<img src="https://img-blog.csdnimg.cn/3bf780496935475982184df2bf4c520d.png"><br>通过内容考虑栅栏密码，得到flag<img src="https://img-blog.csdnimg.cn/abad0cd0fd40457ab72fde28014e82c9.png"></p><h2 id="七、情报员CPU"><a href="#七、情报员CPU" class="headerlink" title="七、情报员CPU"></a>七、情报员CPU</h2><p>打开附件发现是一个加密压缩包，<br><img src="https://img-blog.csdnimg.cn/7620f7e93d764197a28bce0cb6fdbaed.png"><br>打开passwd1<img src="https://img-blog.csdnimg.cn/f90232b1be104e6fb72c5d50d04effdb.png"><br>可以考虑干支解密，通过<img src="https://img-blog.csdnimg.cn/a8d27d31d7ab4c238ff5c62814fd67b2.png"><br>对照得到密码，打开第二个压缩包也是加密的，打开passwd2<img src="https://img-blog.csdnimg.cn/05141dba3e4a4ac6a1e47636f1a91398.png"><br>看出是核心价值观编码<img src="https://img-blog.csdnimg.cn/46cfa36a2f8c48be8e7783275fa728d3.png"><br>打开第二个压缩包得到一张图片<img src="https://img-blog.csdnimg.cn/86a2fc78f76648c285f7cdd4b2d5ba4d.png"><br>得到CPU带来的秘密图片通过010看到藏着一串数字，考虑ascii码加密<img src="https://img-blog.csdnimg.cn/6b4b1ff19e1043fea54a5ed34bbc621f.png"><br><img src="https://img-blog.csdnimg.cn/b64a23eb871946149cbb31def92b9b27.png">得到flag，结果用SLsec{}包装<br>链接:<a href="https://ctf.bugku.com/tool/cvecode">核心价值观编码</a></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h2 id="一、签到"><a href="#一、签到" class="headerlink" title="一、签到"></a>一、签到</h2><p>通过网页捕获找到这个flag<img src="https://img-blog.csdnimg.cn/b1e4a6c8d0424f40807b74a71f89a266.png"><br>再通过保存图片，通过网上图片文字提取得到flag<img src="https://img-blog.csdnimg.cn/0fe19985425e49798251eab79149a2c3.png"></p><h2 id="二、Robots"><a href="#二、Robots" class="headerlink" title="二、Robots"></a>二、Robots</h2><p>通过robots网上可得知爬虫协议，即将网站后面加上&#x2F;robots，如图<img src="https://img-blog.csdnimg.cn/16f1280b0b40422a9fd0cdd2507c435e.png"><br>再通过此修改得到flag<img src="https://img-blog.csdnimg.cn/f4c100f43bb2457992e6cbf8815ea18b.png"></p><h2 id="三、PHP01"><a href="#三、PHP01" class="headerlink" title="三、PHP01"></a>三、PHP01</h2><p><img src="https://img-blog.csdnimg.cn/4ceea2c0a9ed4f8d9d52095a29a60ab5.png"><br>根据对此分析得到get应传的参，如图所示，得到flag。<img src="https://img-blog.csdnimg.cn/79a3291dbf1849fb8b4bb6d7de6926f8.png"></p><h2 id="四、PHP02"><a href="#四、PHP02" class="headerlink" title="四、PHP02"></a>四、PHP02</h2><p><img src="https://img-blog.csdnimg.cn/927457eba5cc46d2b96baa8528d5612b.png">首先这题提示只要访问flag.php就能得到答案，但是如果你单纯输出flag.php会出现如下图的情况<img src="https://img-blog.csdnimg.cn/0851eb9a7f3f4babb6ef9423f4b47e30.png">所以可以从中得到规律，进行以下的修改，得到flag<img src="https://img-blog.csdnimg.cn/4e71b5701a8044f69fcaa60b7df2da46.png"></p><h2 id="CPYPTO"><a href="#CPYPTO" class="headerlink" title="CPYPTO"></a>CPYPTO</h2><h2 id="一、base家族"><a href="#一、base家族" class="headerlink" title="一、base家族"></a>一、base家族</h2><p>打开附件得到一串码，根据题目，考虑base解密<img src="https://img-blog.csdnimg.cn/e49eb8026b2640f4955fecfc755b5acf.png"><br>考虑到可能是base的层层加密<img src="https://img-blog.csdnimg.cn/24b30ad9dea546509415dad3cddc7985.png"><br><img src="https://img-blog.csdnimg.cn/0a305a34f54a42b181a07952f2b6c9f4.png"><br><img src="https://img-blog.csdnimg.cn/2ba6b68d5a29445daa02a78cbdcfdf67.png"><br>工具链接:<a href="https://ctf.bugku.com/tools">https://ctf.bugku.com/tools</a></p><h2 id="二、O欢迎来到SLsec！，ok"><a href="#二、O欢迎来到SLsec！，ok" class="headerlink" title="二、O欢迎来到SLsec！，ok"></a>二、O欢迎来到SLsec！，ok</h2><p>打开文本得到一堆重复乱码，<img src="https://img-blog.csdnimg.cn/9f439923407b48faa14c529473c7366e.png"><br>根据题目考虑到ook解密，将SLsec改成Ook后得到flag<img src="https://img-blog.csdnimg.cn/c0794036be604434ab58c6b9bd749c24.png"><br>ook解密链接:<a href="https://ctf.bugku.com/tool/brainfuck">https://ctf.bugku.com/tool/brainfuck</a></p><h2 id="三、小兔兔找朋友"><a href="#三、小兔兔找朋友" class="headerlink" title="三、小兔兔找朋友"></a>三、小兔兔找朋友</h2><p><img src="https://img-blog.csdnimg.cn/dacb3b73d9dd4f01a26587f360391d34.png"><br>此题要根据题目来做，首先是小兔子过生日，当天为光棍节，所以密钥为1111，通过兔兔想到兔子解密，兔子解密后栅栏数为三的栅栏解密以及最后的凯撒解密得到答案，步骤如下<img src="https://img-blog.csdnimg.cn/d01a30fd80c74387b9115d682cb03f92.png"><br><img src="https://img-blog.csdnimg.cn/89da6bec84b649d5bb42aba95eb3ff40.png"><br><img src="https://img-blog.csdnimg.cn/3a6a691046f6475f836062ff698f5da3.png"><br>RABBIT解密链接:<a href="https://www.codeeeee.com/encrypt/rabbit.html">https://www.codeeeee.com/encrypt/rabbit.html</a></p><h2 id="四、MD5解密"><a href="#四、MD5解密" class="headerlink" title="四、MD5解密"></a>四、MD5解密</h2><p>该题是通过一串代码得到的答案，<img src="https://img-blog.csdnimg.cn/14b994b450f544d2bab69ae1b08eb176.png"><br>再用SLsec包装即是答案。</p><p>源代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">#print hashlib.md5(s).hexdigest().upper()`</span><br><span class="line">k = &#x27;SLsec&#123;md5&amp;zd&amp;mj&amp;m&#125;&#x27;</span><br><span class="line">for i in range(26):</span><br><span class="line">    temp1 = k.replace(&#x27;&amp;&#x27;,str(chr(97+i)),1) #用ascii开始，从A开始查</span><br><span class="line">    for j in range(26):</span><br><span class="line">        temp2 = temp1.replace(&#x27;&amp;&#x27;,chr(97+j),1)</span><br><span class="line">        for n in range(26):``</span><br><span class="line">            temp3 = temp2.replace(&#x27;&amp;&#x27;,chr(97+n),1)</span><br><span class="line">            s = hashlib.md5(temp3.encode(&#x27;utf8&#x27;)).hexdigest().upper()#注意大小写</span><br><span class="line">            if s[:32] == &#x27;D1ABA2C785779AFFFBEC56422DBF23F2&#x27;:#检查元素</span><br><span class="line">                print(temp3)</span><br></pre></td></tr></table></figure><p>源代码链接：<a href="https://blog.csdn.net/emmmk_suibian/article/details/123693217">https://blog.csdn.net/emmmk_suibian&#x2F;article&#x2F;details&#x2F;123693217</a></p><h2 id="RESERVE"><a href="#RESERVE" class="headerlink" title="RESERVE"></a>RESERVE</h2><h2 id="一、re签到"><a href="#一、re签到" class="headerlink" title="一、re签到"></a>一、re签到</h2><p>将附件放入ida就能找到答案<img src="https://img-blog.csdnimg.cn/18adbcc956c24c53b4dc37a521d1f56b.png"></p><h2 id="二、JustCaesar"><a href="#二、JustCaesar" class="headerlink" title="二、JustCaesar"></a>二、JustCaesar</h2><p>第二题同样是exe文件，所以通过ida打开这个压缩包<img src="https://img-blog.csdnimg.cn/c72ca5bc13bf4c059b3b6768bee13c84.png"><br>得到一串代码，通过题目提示凯撒，所以进行凯撒解密得到flag<img src="https://img-blog.csdnimg.cn/173550f16aa543ebb433c8b1a8421e18.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 新手、网安学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/07/hello-world/"/>
      <url>/2023/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
